Services

Angular services are substitutable objects that are wired together using dependency injection (DI).
You can use services to organize and share code across your app.

Angular services are:

Lazily instantiated – Angular only instantiates a service when an application component depends on it.
Singletons – Each component dependent on a service gets a reference to the single instance generated by the service factory.
Angular offers several useful services (like $http), but for most applications you'll also want to create your own.

To use an Angular service, you add it as a dependency for the component (controller, service, filter or directive) that depends on the service.
Angular's dependency injection subsystem takes care of the rest.

Example:
app.controller('myCtrl', function($scope, MyService) {
    $scope.myCustomService = MyService.myFunc();
});