Scopes

Scope is an object that refers to the application model. It is an execution context for expressions.
Scope is the binding part between the HTML (view) and the JavaScript (controller).
Scope is available for both the view and the controller.

When you make a controller in AngularJS, you pass the $scope object as an argument:

Example:
<div ng-app="myApp" ng-controller="myCtrl">

<h1>{{carname}}</h1>

</div>

<script>
var app = angular.module('myApp', []);

app.controller('myCtrl', function($scope) {
    $scope.carname = "Volvo";
});
</script>

Understanding the Scope
If we consider an AngularJS application to consist of:

View, which is the HTML.
Model, which is the data available for the current view.
Controller, which is the JavaScript function that makes/changes/removes/controls the data.
Then the scope is the Model.

Root Scope
All applications have a $rootScope which is the scope created on the HTML element that contains the ng-app directive.

The rootScope is available in the entire application.